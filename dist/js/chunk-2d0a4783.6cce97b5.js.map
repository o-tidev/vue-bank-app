{"version":3,"sources":["webpack:///./src/views/Request.vue","webpack:///./src/views/Request.vue?0090"],"names":["class","for","value","loading","request","back","title","fullname","phone","currency","amount","type","status","id","remove","hasChanges","update","setup","store","route","router","dispatch","params","push","data","components","AppPage","AppLoader","AppStatus","render"],"mappings":"2IAGO,eAAgC,cAAxB,mBAAe,G,EACvB,eAA6B,cAArB,gBAAY,G,EACpB,eAA+B,cAAvB,kBAAc,G,EAEvB,eAA+B,cAAvB,kBAAc,G,iBAAS,M,GAI5BA,MAAM,gB,EACT,eAAkC,SAA3BC,IAAI,UAAS,UAAM,G,EAExB,eAAuC,UAA/BC,MAAM,QAAO,aAAS,G,EAC9B,eAAsC,UAA9BA,MAAM,UAAS,UAAM,G,EAC7B,eAAsC,UAA9BA,MAAM,UAAS,UAAM,G,EAC7B,eAAwC,UAAhCA,MAAM,WAAU,WAAO,G,SAO1BF,MAAM,0B,8HAvBC,EAAAG,S,iBAAlB,eAA6B,YACa,EAAAC,S,iBAA1C,eAqBW,G,MArBDC,KAAA,GAAKC,MAAM,W,yBACnB,iBAA+D,CAA/D,eAA+D,UAA5D,E,eAAgC,KAAE,eAAG,EAAAF,QAAQG,UAAQ,KACxD,eAAyD,UAAtD,E,eAA6B,KAAE,eAAG,EAAAH,QAAQI,OAAK,KAClD,eAAsE,UAAnE,E,eAA+B,KAAE,eAAG,EAAAC,SAAS,EAAAL,QAAQM,SAAM,KAC9D,eAGI,UAFF,E,EACA,eAAgD,GAAnCC,KAAM,EAAAP,QAAQQ,Q,mBAG7B,eAQM,MARN,EAQM,CAPJ,E,eACA,eAKS,UALDC,GAAG,S,qDAAkB,EAAAD,OAAM,K,CACjC,EACA,EACA,EACA,G,cAJ2B,EAAAA,YAQ/B,eAA0D,UAAlDZ,MAAM,aAAc,QAAK,8BAAE,EAAAc,QAAA,EAAAA,OAAA,sBAAQ,UACD,EAAAC,Y,iBAA1C,eAAqE,U,MAA7Df,MAAM,MAAO,QAAK,8BAAE,EAAAgB,QAAA,EAAAA,OAAA,sBAA0B,W,mDAExD,eAEK,KAFL,EAA0C,wBACpB,eAAG,EAAAH,IAAK,iBAC9B,I,gHAYa,G,UAAA,CACbI,MADa,WAGX,IAAMd,EAAU,gBAAI,GACde,EAAQ,iBACRC,EAAQ,iBACRC,EAAS,iBACThB,EAAU,eAAI,IACdQ,EAAS,iBAGf,eAAS,wCAAC,2GACRT,EAAQD,OAAQ,EADR,SAEcgB,EAAMG,SAAS,mBAAoBF,EAAMG,OAAOT,IAF9D,OAERT,EAAQF,MAFA,OAGRU,EAAOV,MAAP,UAAeE,EAAQF,aAAvB,aAAe,EAAeU,OAC9BT,EAAQD,OAAQ,EAJR,4CAQV,IAAMa,EAAa,gBAAS,kBAAMX,EAAQF,MAAMU,SAAWA,EAAOV,SAG5DY,EAAK,yDAAI,8GACPI,EAAMG,SAAS,iBAAkBF,EAAMG,OAAOT,IADvC,OAEbO,EAAOG,KAAK,KAFC,2CAAJ,qDAMLP,EAAK,yDAAI,2GACPQ,EADO,iCAERpB,EAAQF,OAFA,IAGXU,OAAQA,EAAOV,MACfW,GAAIM,EAAMG,OAAOT,KAJN,SAMPK,EAAMG,SAAS,iBAAkBG,GAN1B,OAObpB,EAAQF,MAAMU,OAASA,EAAOV,MAPjB,2CAAJ,qDAUX,MAAO,CACLC,UACAC,UACAS,GAAIM,EAAMG,OAAOT,GACjBJ,WAAA,KACAK,SACAF,SACAG,aACAC,WAGJS,WAAY,CAAEC,UAAA,KAASC,YAAA,KAAWC,YAAA,QCpFpC,EAAOC,OAASA,EAED","file":"js/chunk-2d0a4783.6cce97b5.js","sourcesContent":["<template>\n  <app-loader v-if=\"loading\" />\n  <app-page back title=\"request\" v-else-if=\"request\">\n    <p><strong>holder fullname</strong>: {{ request.fullname }}</p>\n    <p><strong>holder phone</strong>: {{ request.phone }}</p>\n    <p><strong>request amount</strong>: {{ currency(request.amount) }}</p>\n    <p>\n      <strong>request status</strong>:\n      <app-status :type=\"request.status\"></app-status>\n    </p>\n\n    <div class=\"form-control\">\n      <label for=\"status\">STATUS</label>\n      <select id=\"status\" v-model=\"status\">\n        <option value=\"done\">Completed</option>\n        <option value=\"denied\">Denied</option>\n        <option value=\"active\">Active</option>\n        <option value=\"pending\">Pending</option>\n      </select>\n    </div>\n\n    <button class=\"btn danger\" @click=\"remove\">Delete</button>\n    <button class=\"btn\" @click=\"update\" v-if=\"hasChanges\">Update</button>\n  </app-page>\n  <h3 v-else class=\"text-center text-white\">\n    A request with id = {{ id }} wasn't found\n  </h3>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport AppPage from \"../ui/AppPage.vue\";\nimport { useStore } from \"vuex\";\nimport AppLoader from \"../ui/AppLoader.vue\";\nimport AppStatus from \"../ui/AppStatus.vue\";\nimport { currency } from \"../utils/currency\";\nimport router from \"../router\";\nexport default {\n  setup() {\n    // defining the hooks\n    const loading = ref(true);\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const request = ref({});\n    const status = ref();\n\n    // loading posts once the component is mounted\n    onMounted(async () => {\n      loading.value = true;\n      request.value = await store.dispatch(\"request/loadById\", route.params.id);\n      status.value = request.value?.status;\n      loading.value = false;\n    });\n\n    // defining the changes if there is any avalaible\n    const hasChanges = computed(() => request.value.status !== status.value);\n\n    // removing post through firebase\n    const remove = async () => {\n      await store.dispatch(\"request/remove\", route.params.id);\n      router.push(\"/\");\n    };\n\n    // updating the request through firebase\n    const update = async () => {\n      const data = {\n        ...request.value,\n        status: status.value,\n        id: route.params.id,\n      };\n      await store.dispatch(\"request/update\", data);\n      request.value.status = status.value;\n    };\n\n    return {\n      loading,\n      request,\n      id: route.params.id,\n      currency,\n      remove,\n      status,\n      hasChanges,\n      update,\n    };\n  },\n  components: { AppPage, AppLoader, AppStatus },\n};\n</script>\n\n<style></style>\n","import { render } from \"./Request.vue?vue&type=template&id=0b675659\"\nimport script from \"./Request.vue?vue&type=script&lang=js\"\nexport * from \"./Request.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}